name: Pipeline with Argocd

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

env:
  IMAGE_NAME: ssuareza/argocd-example
  BRANCH_NAME: ${{ github.ref_name }}
  SHA: ${{ github.sha }}
  GIT_USERNAME: ${{ secrets.GITHUB_USERNAME }}
  GIT_EMAIL: ${{ secrets.GITHUB_EMAIL }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $HOME/go/bin v1.59.0
      - name: Add golangci-lint to PATH
        run: echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Lint Go code
        working-directory: ./app
        run: golangci-lint run

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Run Go tests
        working-directory: ./app
        run: go test ./... -v

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    # only runs on dev and main
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract branch name
        id: extract_branch
        run: |
          BRANCH_NAME=${GITHUB_REF_NAME//\//-}
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./app
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/argocd-example:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/argocd-example:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/argocd-example:${{ env.BRANCH_NAME }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update deployment
        run: |
          echo "${{ env.GIT_USERNAME }}"
          echo "${{ env.GIT_EMAIL }}"
          git config user.name "${{ env.GIT_USERNAME }}"
          git config user.email "${{ env.GIT_EMAIL }}"
          git checkout ${{ env.BRANCH_NAME }}
          git pull origin ${{ env.BRANCH_NAME }}
          pwd
          cd deploy/overlays/${{ env.BRANCH_NAME }}
          # remove next 2 lines if works, is just debugging
          pwd 
          cat deployment.yaml
          sed -i "s|image: ${IMAGE_NAME}:.*|image: ${IMAGE_NAME}:${SHA}|g" deployment.yaml
          cat deployment.yaml
          git add deployment.yaml
          git commit -m "Update image to ${{ env.SHA }}"
          git push origin main
